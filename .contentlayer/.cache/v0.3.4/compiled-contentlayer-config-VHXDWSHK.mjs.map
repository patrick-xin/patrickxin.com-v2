{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../src/config/mdx.ts"],
  "sourcesContent": ["import type { ComputedFields } from \"contentlayer/source-files\";\nimport { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport readingTime from \"reading-time\";\n\nimport mdxOptions from \"./src/config/mdx\";\n\nconst computedFields: ComputedFields = {\n  readingTime: { type: \"json\", resolve: (doc) => readingTime(doc.body.raw) },\n  wordCount: {\n    type: \"number\",\n    resolve: (doc) => doc.body.raw.split(/\\s+/gu).length,\n  },\n  slug: {\n    type: \"string\",\n    resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\n  },\n};\n\nconst Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: \"**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    publishedAt: { type: \"string\", required: true },\n    description: { type: \"string\", required: true },\n    isPublished: { type: \"boolean\", required: true },\n    toc: { type: \"boolean\", required: true },\n    thumbnail: { type: \"json\", required: false },\n  },\n  computedFields,\n}));\n\nconst contentLayerConfig = makeSource({\n  contentDirPath: \"content/posts\",\n  documentTypes: [Post],\n  mdx: mdxOptions,\n});\n\nexport default contentLayerConfig;\n", "import rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeCodeTitles from \"rehype-code-titles\";\nimport rehypePrism from \"rehype-prism-plus\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkExternalLinks from \"remark-external-links\";\nimport remarkGfm from \"remark-gfm\";\nimport type { Pluggable } from \"unified\";\n\nconst mdxOptions = {\n  remarkPlugins: [remarkExternalLinks, remarkGfm],\n  rehypePlugins: [\n    rehypeSlug,\n    rehypeCodeTitles,\n    rehypePrism,\n    [\n      rehypeAutolinkHeadings,\n      {\n        behavior: \"append\",\n      },\n    ],\n  ] as Pluggable[],\n};\n\nexport default mdxOptions;\n"],
  "mappings": ";AACA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,iBAAiB;;;ACFxB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,iBAAiB;AACxB,OAAO,gBAAgB;AACvB,OAAO,yBAAyB;AAChC,OAAO,eAAe;AAGtB,IAAM,aAAa;AAAA,EACjB,eAAe,CAAC,qBAAqB,SAAS;AAAA,EAC9C,eAAe;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,QACE,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,cAAQ;;;ADjBf,IAAM,iBAAiC;AAAA,EACrC,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG,EAAE;AAAA,EACzE,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,EAChD;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,EAChE;AACF;AAEA,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,aAAa,EAAE,MAAM,WAAW,UAAU,KAAK;AAAA,IAC/C,KAAK,EAAE,MAAM,WAAW,UAAU,KAAK;AAAA,IACvC,WAAW,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC7C;AAAA,EACA;AACF,EAAE;AAEF,IAAM,qBAAqB,WAAW;AAAA,EACpC,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AACP,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
